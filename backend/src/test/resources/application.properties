# port used to listen to requests
server.port=9499

## defining data source (MariaDB - SQL)
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
## connection details
## DB_URL = jdbc:mariadb://db2.csse.canterbury.ac.nz/seng302-2020-team-500-prod
#spring.datasource.url=DB_URL
#spring.datasource.username=DB_USERNAME
#spring.datasource.password=DB_PASSWORD
## MariaDB dialect (language) wrapper
#spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect

# alternatively, use H2 (in-memory DB)
spring.datasource.driverClassName=org.h2.Driver
# connection details
#spring.datasource.url=DB_URL
#spring.datasource.username=DB_USERNAME
#spring.datasource.password=DB_PASSWORD
## MariaDB dialect (language) wrapper
#spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect

dgaa.username=wasteless@seng302.com
dgaa.password=dgaa_password7

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=
# H2 needs a special dialect wrapper
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
# ask H2 to create / update the SQL schema at boot time (may be dangerous if used on real DB)
spring.jpa.hibernate.ddl-auto=update
# enable GUI console (similar to myPHPAdmin)
spring.h2.console.enabled=true
spring.h2.console.path=/h2
# print SQL statements
spring.jpa.properties.hibernate.format_sql=true


#
server.error.include-message=always
